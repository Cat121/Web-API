plugins {
    id "java"
    id "com.qixalite.spongestart" version "1.6.2"
    id "ninja.miserable.blossom" version "1.0.1"
    id "com.github.johnrengelman.shadow" version "2.0.1"
}

group = "valandur.webapi";

allprojects {
    apply plugin: "java"

    version = "${project.version}-S${project.spongeVersion}";

    repositories {
        mavenCentral()
        maven {
            url "https://repo.spongepowered.org/maven/"
        }
    }

    dependencies {
        compileOnly group: "org.spongepowered", name: "spongeapi", version: "${project.spongeVersion}.0-SNAPSHOT"
    }
}

blossom {
    def locMain = "src/main/java/valandur/webapi/util/Constants.java"
    replaceToken "@version@", project.version, locMain
}

spongestart {
    eula true
    minecraft project.minecraftVersion
    spongeForgeVersion "1.12.2-2555-7.1.0-BETA-2831"
    spongeVanillaVersion "1.12.2-7.1.0-BETA-9"
}

repositories {
    maven {
        url "http://repo.bstats.org/content/repositories/releases/"
    }
    maven {
        url = "http://repo.aikar.co/nexus/content/groups/aikar/"
    }
    flatDir {
        dirs "lib"
    }
}

// Exclude apache commons because minecraft includes it
configurations {
    all*.exclude group: "org.apache.commons"
    all*.exclude group: "com.google.common.base"
}

configurations.all {
    resolutionStrategy {
        force "com.google.guava:guava:23.0"             // Worst library ever
        force "org.reflections:reflections:0.9.10"      // Fixes some logging issues in 0.9.11
    }
}

dependencies {
    compile project(":webapi-api")
    compile group: "co.aikar", name: "minecraft-timings", version: "1.0.4"
    compile group: "io.sentry", name: "sentry", version: "1.6.4"
    compile group: "commons-net", name: "commons-net", version: "3.6"
    compile group: "org.mindrot", name: "jbcrypt", version: "0.4"
    compile group: "org.bstats", name: "bstats-sponge", version: "1.2"
    compile group: "com.github.oshi", name: "oshi-core", version: "3.4.4"
    compile group: "org.glassfish.jersey.containers", name: "jersey-container-servlet", version: "2.26"
    compile group: "org.glassfish.jersey.inject", name: "jersey-hk2", version: "2.26"
    compile group: "com.fasterxml.jackson.jaxrs", name: "jackson-jaxrs-json-provider", version: project.jacksonVersion
    // compile group: "io.swagger.core.v3", name: "swagger-jaxrs2", version: "2.0.0-rc3"    // This if for Swagger 3.0

    compileOnly group: "com.fasterxml.jackson.core", name: "jackson-core", version: project.jacksonVersion
    compileOnly group: "com.fasterxml.jackson.core", name: "jackson-databind", version: project.jacksonVersion
    compileOnly group: "com.fasterxml.jackson.core", name: "jackson-annotations", version: project.jacksonVersion
    compileOnly group: "com.fasterxml.jackson.dataformat", name: "jackson-dataformat-xml", version: project.jacksonVersion
    compileOnly group: "org.codehaus.woodstox", name: "woodstox-core-asl", version: "4.4.1"
    compileOnly group: "org.eclipse.jetty", name: "jetty-server", version: project.jettyVersion
    compileOnly group: "org.eclipse.jetty", name: "jetty-servlet", version: project.jettyVersion
    compileOnly group: "org.eclipse.jetty", name: "jetty-http", version: project.jettyVersion
    compileOnly group: "org.eclipse.jetty", name: "jetty-rewrite", version: project.jettyVersion

    compileOnly group: "io.swagger", name: "swagger-jersey2-jaxrs", version: "1.5.18"

    // Integrations
    compileOnly name: "ActiveTime-s7.1-v1.4.0"
    compileOnly name: "griefprevention-1.12.2-4.3.0.511"
    compileOnly name: "HuskyCrates-v1.8.0PRE2-API7"
    compileOnly name: "MMCRestrict-1.4.0-API-7"
    compileOnly name: "MMCTickets-1.4.1-API-7"
    compileOnly name: "Nucleus-1.3.3-S7.0-api"
    compileOnly name: "RedProtect-7.3.0-b68-Universal"
    compileOnly name: "UniversalMarket-1.12.2-v1.1"
    compileOnly name: "WebBooks"
}

shadowJar {
    configurations  = [project.configurations.compile]

    duplicatesStrategy = DuplicatesStrategy.FAIL

    mergeServiceFiles()

    relocate "co.aikar.timings.lib", "valandur.webapi.shadow.co.aikar.timings.lib"
    relocate "edu.umd.cs.findbugs.annotations", "valandur.webapi.shadow.edu.umd.cs.findbugs.annotations"
    relocate "io.sentry", "valandur.webapi.shadow.io.sentry"
    relocate "net.jcip.annotations", "valandur.webapi.shadow.net.jcip.annotations"
    relocate "org.threeten", "valandur.webapi.shadow.org.threeten"
    relocate "org.bstats", "valandur.webapi.shadow.org.bstats"
    relocate "oshi", "valandur.webapi.shadow.oshi"


    // We need to relocate these dependencies, even though they're excluded because
    // we need the references in our code to be changed to the shadowed dependencies
    // These dependencies are already included by WebAPI-API
    relocate "com.ctc", "valandur.webapi.shadow.com.ctc"
    relocate "com.fasterxml", "valandur.webapi.shadow.com.fasterxml"

    // relocate "com.google.common", "valandur.webapi.shadow.com.google.common"
    relocate "com.google.errorprone", "valandur.webapi.shadow.com.google.errorprone"
    relocate "com.google.j2objc", "valandur.webapi.shadow.com.google.j2objc"
    relocate "com.google.thirdparty", "valandur.webapi.shadow.com.google.thirdparty"

    relocate "com.sun.research", "valandur.webapi.shadow.com.sun.research"

    relocate("io.swagger", "valandur.webapi.shadow.io.swagger") {
        exclude "io.swagger.jaxrs.ext.SwaggerExtension"
    }

    relocate "javassist", "valandur.webapi.shadow.javassist"

    relocate "javax.annotation", "valandur.webapi.shadow.javax.annotation"
    relocate "javax.inject", "valandur.webapi.shadow.javax.inject"
    relocate "javax.servlet", "valandur.webapi.shadow.javax.servlet"
    relocate "javax.validation", "valandur.webapi.shadow.javax.validation"
    relocate "javax.ws", "valandur.webapi.shadow.javax.ws"
    relocate "javax.xml.stream", "valandur.webapi.shadow.javax.xml.stream"

    relocate "jersey.repackaged", "valandur.webapi.shadow.jersey.repackaged"

    relocate "org.aopalliance", "valandur.webapi.shadow.org.aopalliance"
    relocate "org.apache", "valandur.webapi.shadow.org.apache"
    relocate "org.codehaus", "valandur.webapi.shadow.org.codehaus"

    relocate "org.eclipse.jetty.http", "valandur.webapi.shadow.org.eclipse.jetty.http"
    relocate "org.eclipse.jetty.io", "valandur.webapi.shadow.org.eclipse.jetty.io"
    relocate "org.eclipse.jetty.rewrite", "valandur.webapi.shadow.org.eclipse.jetty.rewrite"
    relocate "org.eclipse.jetty.security", "valandur.webapi.shadow.org.eclipse.jetty.security"
    relocate "org.eclipse.jetty.server", "valandur.webapi.shadow.org.eclipse.jetty.server"
    relocate "org.eclipse.jetty.servlet", "valandur.webapi.shadow.org.eclipse.jetty.servlet"
    relocate "org.eclipse.jetty.util", "valandur.webapi.shadow.org.eclipse.jetty.util"
    relocate "org.eclipse.jetty.version", "valandur.webapi.shadow.org.eclipse.jetty.version"

    relocate "org.glassfish", "valandur.webapi.shadow.org.glassfish"
    relocate "org.intellij", "valandur.webapi.shadow.org.intellij"
    relocate "org.jetbrains", "valandur.webapi.shadow.org.jetbrains"
    relocate "org.jvnet", "valandur.webapi.shadow.org.jvnet"
    relocate "org.mindrot", "valandur.webapi.shadow.org.mindrot"
    relocate "org.reflections", "valandur.webapi.shadow.org.reflections"

    relocate "org.slf4j.event", "valandur.webapi.shadow.org.slf4j.event"
    relocate "org.slf4j.helpers", "valandur.webapi.shadow.org.slf4j.helpers"
    relocate "org.slf4j.spi", "valandur.webapi.shadow.org.slf4j.spi"

    relocate "org.yaml", "valandur.webapi.shadow.org.yaml"

    dependencies {
        // Exclude the dependencies already included by WebAPI-API
        exclude(dependency("com.ctc.*:"))
        exclude(dependency("com.fasterxml.*:"))

        exclude(dependency("com.google.common.*:"))
        exclude(dependency("com.google.errorprone.*:"))
        exclude(dependency("com.google.j2objc.*:"))
        exclude(dependency("com.google.thirdparty.*:"))

        exclude(dependency("com.sun.research.*:"))

        exclude(dependency("io.swagger.*:"))

        exclude(dependency("javassist.*:"))

        exclude(dependency("javax.annotation.*:"))
        exclude(dependency("javax.inject.*:"))
        exclude(dependency("javax.servlet.*:"))
        exclude(dependency("javax.validation.*:"))
        exclude(dependency("javax.ws.*:"))
        exclude(dependency("javax.xml.stream.*:"))

        exclude(dependency("jersey.repackaged.*:"))

        exclude(dependency("org.aopalliance.*:"))
        exclude(dependency("org.apache.*:"))
        exclude(dependency("org.codehaus.*:"))

        exclude(dependency("org.eclipse.jetty.http.*:"))
        exclude(dependency("org.eclipse.jetty.io.*:"))
        exclude(dependency("org.eclipse.jetty.rewrite.*:"))
        exclude(dependency("org.eclipse.jetty.security.*:"))
        exclude(dependency("org.eclipse.jetty.server.*:"))
        exclude(dependency("org.eclipse.jetty.servlet.*:"))
        exclude(dependency("org.eclipse.jetty.util.*:"))
        exclude(dependency("org.eclipse.jetty.version.*:"))

        exclude(dependency("org.glassfish.*:"))
        exclude(dependency("org.intellij.*:"))
        exclude(dependency("org.jetbrains.*:"))
        exclude(dependency("org.jvnet.*:"))
        exclude(dependency("org.mindrot.*:"))
        exclude(dependency("org.yaml.*:"))

        // Provided by sponge/forge
        exclude(dependency("org.slf4j.*:"))
    }

    exclude "/about.html"
    exclude "/jetty-dir.css"
    exclude "/org/eclipse/jetty/favicon.ico"
    exclude "/io/swagger/jaxrs/ext/SwaggerExtension.class"   // We overwrite this class using services, so let's remove it

    archiveName = "webapi-${version}.jar"
}
shadowJar.dependsOn([':webapi-api:build'])

task copyJars(type: Copy, dependsOn: ":webapi-api:build") {
    from([subprojects.jar, shadowJar])
    into project.file("artifacts")
}

artifacts {
    archives shadowJar
}

build.dependsOn(shadowJar)
build.dependsOn(copyJars)
